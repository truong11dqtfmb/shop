#Server
server.port=8008

#spring.cache.type=redis
#spring.cache.redis.cache-null-values=true
#spring.redis.port=6379
#spring.cache.redis.time-to-live=40000

#connect mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shop_app
spring.datasource.username=root
spring.datasource.password=123456

spring.main.allow-bean-definition-overriding=true
#jpa
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, validate, update, none)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect


#image
multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
project.image=images
#error page
#server.error.whitelabel.enabled=false
##Send mail
##spring.mail.protocol=smtp
##spring.mail.default-encoding=UTF-8
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=quoctruong11tv@gmail.com
#spring.mail.password=pgkybcgivxmypjdx
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#@Bean
#public ModelMapper modelMapper() {
#return new ModelMapper();
#}
#@Autowired
#private ModelMapper modelMapper;
#//        Conver DTO -> Entity
#Staff entity = modelMapper.map(staffDTO, Staff.class);
#//          Entity -> DTO
#StaffDTO staffDTO = modelMapper.map(staff.get(), StaffDTO.class);

#prometheus
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always